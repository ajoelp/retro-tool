// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String        @id @default(uuid())
  githubNickname String
  email          String        @unique
  avatar         String
  boards         Board[]
  cards          Card[]
  boardAccesses  BoardAccess[]
  isAdmin        Boolean       @default(false)
  defaultColumns String?
}

model Board {
  id            String        @id @default(uuid())
  title         String
  createdAt     DateTime      @default(now())
  owner         User          @relation(fields: [ownerId], references: [id])
  ownerId       String
  settings      Json          @default("{}")
  columns       Column[]
  inviteCode    String?
  boardAccesses BoardAccess[]
  timer         Json?
  deleted       DateTime?
  actionItems   ActionItem[]
}

model ActionItem {
  id        String   @id @default(uuid())
  value     String
  complete  Boolean
  createdAt DateTime @default(now())

  boardId String
  board   Board  @relation(fields: [boardId], references: [id])
}

model BoardAccess {
  id      String @id @default(uuid())
  boardId String
  board   Board  @relation(fields: [boardId], references: [id])
  userId  String
  user    User   @relation(fields: [userId], references: [id])
}

model Column {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  boardId   String
  board     Board    @relation(fields: [boardId], references: [id])
  cards     Card[]
  order     Int
}

model Card {
  id        String   @id @default(uuid())
  content   String
  draft     Boolean  @default(false)
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String
  createdAt DateTime @default(now())
  column    Column   @relation(fields: [columnId], references: [id])
  columnId  String
  order     Int
  parentId  String?
  parent    Card?    @relation("parent", fields: [parentId], references: [id])
  children  Card[]   @relation("parent")
  votes     Int      @default(0)
}
